E()把6位扩展成8位:
0 1 2       3 4 5; 扩展前011   011
0 1 3 2   3 2 4 5; 扩展后0101  0111

L0=000111   R0=011011     K0=0 0100 1101; 9位
   ||       0101 0111     K1=  0100 1101; K1=K0循环左移1位取左边8位
   ||          ||       +------+
   ||       0100 1101<--+     (0) (1) (2) (3) (4) (5) (6) (7)
   ||         \||/xor        +101 010 001 110 011 100 111 000+ 
   ||          \/         S0=|                               | 4位输入最高位表示行号
   ||       0001 1010        +001 100 110 010 000 111 101 011+ 低3位表示列号
   ||          || sbox    
   ||         \||/           +100 000 110 101 111 001 011 010+
   ||          \/         S1=|                               |
   ||       010 000          +101 011 000 111 110 010 001 100+
   ||       |
   010000<--+             0000  0001  0010  0011  0100  0101  0110  0111\ 输入差分
   ||                     1010  1011  1000  1001  1110  1111  1100  1101/ = 1010
  \||/                     101   010   001   110   011   100   111   000\ 计算输出
   \/xor                   110   010   001   100   101   011   000   111/ 差分
L1=010111   R1=011011                       =010   
;--------------------(1)
                          0000  0001  0010  0011  0100  0101  0110  0111\ 输入差分
                          1011  1010  1001  1000  1111  1110  1101  1100/ = 1011
                           100   000   110   101   111   001   011   010\ 计算输出
                           111   000   011   101   100   001   010   110/ 差分
                                                                    =100
L1=010111
0110 1011                 K2=  1001 1010; K2=K0循环左移2位取左边8位
   |+-----------------xor------+
1001 1010
   ||
  \||/
   \/
1111 0001
   || sbox
  \||/
   \/       
011 000     R1=011011
      +--xor-----+|
               011000
                 ||
                \||/
                 \/
L2=010111   R2=000011
;--------------------(2)

            R2=000011
            0000 0011     K3=  0011 0100; K3=K0循环左移3位取左边8位
               |+-----xor------+
            0011 0100
               ||
              \||/
               \/
            0011 0111          
               || sbox
              \||/
               \/
L2=010111   110 010
   |+--xor--+
   110010
   ||
  \||/
   \/
L3=100101   R3=000011
;--------------------(3)


L1 = L0 ^ f(R0, K1);
R1 = R0;

R2 = R1 ^ f(L1, K2);
L2 = L1;

L3 = L2 ^ f(R2, K3);
R3 = R2;


L3= L2 ^ f(R2, K3);
L3= L1 ^ f(R2, K3);
L3= L0 ^ f(R0, K1) ^ f(R2, K3);
L3= L0 ^ f(R0, K1) ^ f(R3, K3);

;L0*是对L0的改变, L3*是对L3的改变
;L0'是L0与L0*的差分, L3'是L3与L3*的差分
L0' = L0 ^ L0* 
L3' = L3 ^ L3* = L0' ^ f(R3, K3) ^ f(R3*, K3);
L3' ^ L0' == f(R3, K3) ^ f(R3*, K3);

现定义SR3及SR3*如下, 并计算它们的差分SR3':
SR3  = E(R3) ^ K3 ; // SR3是f(R3,K3)函数中进入sbox前的8位值
SR3* = E(R3*) ^ K3; // SR3*是f(R3*,K3)函数中进入sbox前的8位值
SR3' = SR3 ^ SR3* = E(R3) ^ E(R3*) = E(R3 ^ R3*) = E(R3')
注意SR3' != (f(R3, K3) ^ f(R3*, K3))
SR3' 是进入sbox前的输入差分, f(R3, K3) ^ f(R3*, K3)则是进入sbox后的输出差分。

/*------假定仅修改L0变成L0*, 保持R0不变即R0*=R0----+
 |  L0 =000111   R0 =011011                        |
 |  L0*=101110   R0*=011011                        |
 |  L3*=011000   R3*=100100                        |
 +------则得L3*及R3*(计算过程见des_diff1.txt)------*/

R3' = R3 ^ R3* = 000011 ^ 
                 100100 
               = 100111
E(R3') = 1010 1011
SR3'   = 1010 1011; sbox的输入差分, 差分左4位=
         ~~~~     ; LB4(E(R3))^LB4(K3) ^ LB4(E(R3*))^LB4(K3) = 1010

L3' ^ L0' = (L3 ^ L3*) ^ (L0 ^ L0*) ; sbox的输出差分
          = 100101 ^ 
            011000 ^
            000111 ^
            101110 
          = 010100
            ~~~

以下描述中, LB4()表示左边4位, RB4()表示右边4位, LB3()表示左边3位, RB3()表示右3位。
符合以下条件
    sbox的输入差分的左4位     sbox的输出差分的左3位
    LB4( E(R3') ) == 1010 &&  LB3(L3' ^ L0') == 010
的组合(LB4(SR3), LB4(SR3*))仅有:
    (0011, 1001) 或 (1001, 0011)
而已知R3=000011, R3*=100100, 故有
                             E(R3)=0000 0011, E(R3*)=1010 1000
                           LB4(K3)=0011              0011  xor)
               ------------------------------------------------
               LB4(SR3), LB4(SR3*)=0011              1001
                                          或

                             E(R3)=0000 0011, E(R3*)=1010 1000, 故有
                           LB4(K3)=1001              1001  xor)
               ------------------------------------------------
               LB4(SR3), LB4(SR3*)=1001              0011
即LB4(K3)的值一定是0011或1001的其中之一。
                               

同理, 符合以下条件
    sbox的输入差分的右4位     sbox的输出差分的右3位
    RB4( E(R3') ) == 1011 &&  RB3(L3' ^ L0') == 100
的组合(RB4(SR3), RB4(SR3*))仅有:
    (0111, 1100) 或 (1100, 0111)
而已知R3=000011, R3*=100100, 故有
                             E(R3)=0000 0011, E(R3*)=1010 1000
                           RB4(K3)=     0100              0100  xor)
               -----------------------------------------------------
               RB4(SR3), RB4(SR3*)=     0111              1100
                                          或

                             E(R3)=0000 0011, E(R3*)=1010 1000, 故有
                           RB4(K3)=     1111              1111  xor)
               -----------------------------------------------------
               RB4(SR3), RB4(SR3*)=     1100              0111
即RB4(K3)的值一定是0100或1111的其中之一。
